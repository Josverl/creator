
from typing import Any, Dict, Optional, Sequence, Tuple, Union
Node = Any
class CompositeOp: ...
class Display:
    def image() -> None: ...
    def reset_screen() -> None: ...
    def scroll() -> None: ...
    def text_grid() -> None: ...
    def text_pixels() -> None: ...
class FrameBuffer:
    def blit() -> None: ...
    def fill() -> None: ...
    def fill_rect() -> None: ...
    def hline() -> None: ...
    def line() -> None: ...
    def pixel() -> None: ...
    def rect() -> None: ...
    def scroll() -> None: ...
    def text() -> None: ...
    def vline() -> None: ...
class ImageFile: ...
class MagickWand:
    def _raise_error() -> None: ...
    def _set_image_depth() -> None: ...
    def _set_image_format() -> None: ...
    def _set_image_gravity() -> None: ...
    def border_image() -> None: ...
    def export_image_pixels() -> None: ...
    def extent_image() -> None: ...
    def read_image() -> None: ...
    def write_image() -> None: ...
class PixelWand:
    def _raise_error() -> None: ...
    def _set_color() -> None: ...
    def color() -> None: ...
    def framebuffer() -> None: ...
    def update() -> None: ...
def addressof() -> None: ...
def ioctl() -> None: ...
class mmap:
    def close() -> None: ...
    def read() -> None: ...
    def seek() -> None: ...
    def write() -> None: ...
def sizeof() -> None: ...
class struct: ...
