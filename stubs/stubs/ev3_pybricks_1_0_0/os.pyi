
from typing import Any, Dict, Optional, Sequence, Tuple, Union
Node = Any
def _exit() -> None: ...
def access() -> None: ...
def chdir() -> None: ...
def check_error() -> None: ...
def close() -> None: ...
def dup() -> None: ...
class error: ...
def execvp() -> None: ...
def fork() -> None: ...
def fsdecode() -> None: ...
def fsencode() -> None: ...
def getcwd() -> None: ...
def getenv() -> None: ...
def getpid() -> None: ...
def ilistdir() -> None: ...
def kill() -> None: ...
def listdir() -> None: ...
def makedirs() -> None: ...
def mkdir() -> None: ...
def open() -> None: ...
def pipe() -> None: ...
def popen() -> None: ...
def raise_error() -> None: ...
def read() -> None: ...
def remove() -> None: ...
def rename() -> None: ...
def rmdir() -> None: ...
def stat() -> None: ...
def system() -> None: ...
class uname: ...
def unlink() -> None: ...
def urandom() -> None: ...
def waitpid() -> None: ...
def write() -> None: ...
