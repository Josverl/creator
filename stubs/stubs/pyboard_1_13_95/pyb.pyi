
from typing import Any, Dict, Optional, Sequence, Tuple, Union
Node = Any
class ADC:
    def read() -> None: ...
    def read_timed() -> None: ...
    def read_timed_multi() -> None: ...
class ADCAll:
    def read_channel() -> None: ...
    def read_core_temp() -> None: ...
    def read_core_vbat() -> None: ...
    def read_core_vref() -> None: ...
    def read_vref() -> None: ...
class Accel:
    def filtered_xyz() -> None: ...
    def read() -> None: ...
    def tilt() -> None: ...
    def write() -> None: ...
    def x() -> None: ...
    def y() -> None: ...
    def z() -> None: ...
class CAN:
    def any() -> None: ...
    def clearfilter() -> None: ...
    def deinit() -> None: ...
    def info() -> None: ...
    def init() -> None: ...
    def initfilterbanks() -> None: ...
    def recv() -> None: ...
    def restart() -> None: ...
    def rxcallback() -> None: ...
    def send() -> None: ...
    def setfilter() -> None: ...
    def state() -> None: ...
class DAC:
    def deinit() -> None: ...
    def init() -> None: ...
    def noise() -> None: ...
    def triangle() -> None: ...
    def write() -> None: ...
    def write_timed() -> None: ...
class ExtInt:
    def disable() -> None: ...
    def enable() -> None: ...
    def line() -> None: ...
    def regs() -> None: ...
    def swint() -> None: ...
class Flash:
    def ioctl() -> None: ...
    def readblocks() -> None: ...
    def writeblocks() -> None: ...
class I2C:
    def deinit() -> None: ...
    def init() -> None: ...
    def is_ready() -> None: ...
    def mem_read() -> None: ...
    def mem_write() -> None: ...
    def recv() -> None: ...
    def scan() -> None: ...
    def send() -> None: ...
class LCD:
    def command() -> None: ...
    def contrast() -> None: ...
    def fill() -> None: ...
    def get() -> None: ...
    def light() -> None: ...
    def pixel() -> None: ...
    def show() -> None: ...
    def text() -> None: ...
    def write() -> None: ...
class LED:
    def intensity() -> None: ...
    def off() -> None: ...
    def on() -> None: ...
    def toggle() -> None: ...
class Pin:
    def af() -> None: ...
    def af_list() -> None: ...
    def debug() -> None: ...
    def dict() -> None: ...
    def gpio() -> None: ...
    def high() -> None: ...
    def init() -> None: ...
    def irq() -> None: ...
    def low() -> None: ...
    def mapper() -> None: ...
    def mode() -> None: ...
    def name() -> None: ...
    def names() -> None: ...
    def off() -> None: ...
    def on() -> None: ...
    def pin() -> None: ...
    def port() -> None: ...
    def pull() -> None: ...
    def value() -> None: ...
class RTC:
    def calibration() -> None: ...
    def datetime() -> None: ...
    def info() -> None: ...
    def init() -> None: ...
    def wakeup() -> None: ...
class SDCard:
    def info() -> None: ...
    def ioctl() -> None: ...
    def power() -> None: ...
    def present() -> None: ...
    def read() -> None: ...
    def readblocks() -> None: ...
    def write() -> None: ...
    def writeblocks() -> None: ...
class SPI:
    def deinit() -> None: ...
    def init() -> None: ...
    def read() -> None: ...
    def readinto() -> None: ...
    def recv() -> None: ...
    def send() -> None: ...
    def send_recv() -> None: ...
    def write() -> None: ...
    def write_readinto() -> None: ...
class Servo:
    def angle() -> None: ...
    def calibration() -> None: ...
    def pulse_width() -> None: ...
    def speed() -> None: ...
class Switch:
    def callback() -> None: ...
    def value() -> None: ...
class Timer:
    def callback() -> None: ...
    def channel() -> None: ...
    def counter() -> None: ...
    def deinit() -> None: ...
    def freq() -> None: ...
    def init() -> None: ...
    def period() -> None: ...
    def prescaler() -> None: ...
    def source_freq() -> None: ...
class UART:
    def any() -> None: ...
    def deinit() -> None: ...
    def init() -> None: ...
    def irq() -> None: ...
    def read() -> None: ...
    def readchar() -> None: ...
    def readinto() -> None: ...
    def readline() -> None: ...
    def sendbreak() -> None: ...
    def write() -> None: ...
    def writechar() -> None: ...
class USB_HID:
    def recv() -> None: ...
    def send() -> None: ...
class USB_VCP:
    def any() -> None: ...
    def close() -> None: ...
    def init() -> None: ...
    def isconnected() -> None: ...
    def read() -> None: ...
    def readinto() -> None: ...
    def readline() -> None: ...
    def readlines() -> None: ...
    def recv() -> None: ...
    def send() -> None: ...
    def setinterrupt() -> None: ...
    def write() -> None: ...
def bootloader() -> None: ...
def country() -> None: ...
def delay() -> None: ...
def dht_readinto() -> None: ...
def disable_irq() -> None: ...
def elapsed_micros() -> None: ...
def elapsed_millis() -> None: ...
def enable_irq() -> None: ...
def fault_debug() -> None: ...
def freq() -> None: ...
def hard_reset() -> None: ...
def have_cdc() -> None: ...
def hid() -> None: ...
def info() -> None: ...
def main() -> None: ...
def micros() -> None: ...
def millis() -> None: ...
def mount() -> None: ...
def pwm() -> None: ...
def repl_info() -> None: ...
def repl_uart() -> None: ...
def rng() -> None: ...
def servo() -> None: ...
def standby() -> None: ...
def stop() -> None: ...
def sync() -> None: ...
def udelay() -> None: ...
def unique_id() -> None: ...
def usb_mode() -> None: ...
def wfi() -> None: ...
