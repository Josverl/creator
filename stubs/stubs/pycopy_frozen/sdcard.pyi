
from typing import Any, Dict, Optional, Sequence, Tuple, Union
Node = Any
class SDCard:
    def __init__(self, spi: Any, cs: Any) -> None: ...
    def init_spi(self, baudrate: smallint) -> None: ...
    def init_card(self) -> None: ...
    def init_card_v1(self) -> None: ...
    def init_card_v2(self) -> None: ...
    def cmd(self, cmd: Any, arg: Any, crc: Any, final: Any=, release: Any=, skip1: Any=) -> Optional[Any]: ...
        #   0: return response
        # ? 0: return response
        #   1: return -
        #   1: return
    def readinto(self, buf: Any) -> None: ...
    def write(self, token: Any, buf: Any) -> None: ...
    def write_token(self, token: Any) -> None: ...
    def readblocks(self, block_num: Any, buf: Any) -> None: ...
    def writeblocks(self, block_num: Any, buf: Any) -> None: ...
    def ioctl(self, op: Any, arg: Any) -> Any: ...
        #   0: return self.sectors
        # ? 0: return self.sectors
